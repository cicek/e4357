BEGIN
--------------------------------------------------------------------
Q1: Implement the following inline functions: 
inline int CircularBufferIsFull(CircularBuffer* que) 
inline int CircularBufferIsEmpty(CircularBuffer* que) 



Answer:

inline int CircularBufferIsFull(CircularBuffer* que)
{
#if IS_BUFFER_SIZE_POWER_OF_TWO
     return (((que->writePointer + 1) & que->mask) == que->readPointer); 
#else
     return (((que->writePointer + 1) % que->size) == que->readPointer); 
#endif
}

inline int CircularBufferIsEmpty(CircularBuffer* que)
{
     return (que->readPointer == que->writePointer); 
}

--------------------------------------------------------------------
Q2: How to compute "Interrupt Latency"?

Answer:

System interrupt latency can be defined as the interval between the assertion of the interrupt signal 
and the starting of the code to process that interrupt.
The latency can be measured using an oscilloscope. One GPIO pin is toggled at the start of the interrupt service 
routine, while the interrupt signal is output to another GPIO pin. The delay can be measured 
by observing these two pins at the same time. 

--------------------------------------------------------------------
Q3: Serial pc(USBTX, USBRX); // tx, rx 
    What API (function) do you use to change the baud rate?

Answer:

pc.baud([baud_rate])

--------------------------------------------------------------------
Q4: How many bit(s) does TDO have? Is TDO an input or output type? (Ref: JTAG Pins) 

Answer:

TDO (Test Data Out) â€“ is a single output bit of standard JTAG connections. 

--------------------------------------------------------------------
Q5:
What is the address of ledArr[0]? 
What is the address of ch? 


/* 
* Enter a hex number [0-9a-fA-F]; Decode it in 4-bit binary format and display them on 4 on board leds. 
*/ 

#include "mbed.h" 

Serial pc(USBTX, USBRX); // tx, rx 
DigitalOut ledArr[4] = {DigitalOut(LED1), DigitalOut(LED2), DigitalOut(LED3), DigitalOut(LED4)}; 
void DisplayLed(int ch) 
{ 
	int i=0;

	if (ch>='0' && ch<='9')
		ch-='0';
	else if (ch>='A' && ch<='F') {
		ch-='A';
		ch+=10;
	} else if (ch>='a' && ch<='f') {
		ch-='a';
		ch+=10;
	} else
		ch=0;

	for (i=0; i<4; i++) { 
		if(ch& (1<<i))
			ledArr[i] = 1; 
		else
			ledArr[i] = 0;
	} 
} 

int main(void) { 
	int ch; 
	pc.baud(9600); 
	pc.printf("\r\nHello World!"); 
	while(1) { 
		pc.printf("\r\nEnter:"); 
		ch = pc.getc(); 
		pc.putc(ch); 
		DisplayLed(ch); 
	} 
}
